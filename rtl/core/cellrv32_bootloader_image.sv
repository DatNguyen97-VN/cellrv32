// The CELLRV32 RISC-V Processor: https://github.com/DatNguyen97-VN/cellrv32
// Auto-generated memory initialization file (for BOOTLOADER) from source file <bootloader/main.bin>
// Size: 3548 bytes ( 1 cell = 4 byte)
// MARCH: default
// Built: 18.04.2024 22:11:34

package cellrv32_bootloader_image;

const logic [31:0] bootloader_init_image [887] = '{
32'h30005073,
32'h30401073,
32'h00000097,
32'h0ec08093,
32'h30509073,
32'h80010117,
32'h1e810113,
32'h80010197,
32'h7e418193,
32'h42814201,
32'h43814301,
32'h44814401,
32'h48814801,
32'h49814901,
32'h4a814a01,
32'h4b814b01,
32'h4c814c01,
32'h4d814d01,
32'h4e814e01,
32'h4f814f01,
32'h00001597,
32'hd8c58593,
32'h80010617,
32'hfa860613,
32'h80010697,
32'hfa068693,
32'h00c58963,
32'h00d65763,
32'hc2184198,
32'h06110591,
32'h0717bfd5,
32'h07138001,
32'h8793f867,
32'h56638081,
32'h202300f7,
32'h07110007,
32'h1417bfdd,
32'h04130000,
32'h1497ade4,
32'h84930000,
32'h5863ad64,
32'h20830094,
32'h80e70004,
32'h04110000,
32'h4501bfcd,
32'h00ef4581,
32'h10730780,
32'h10733040,
32'h14173405,
32'h04130000,
32'h1497aae4,
32'h84930000,
32'h5863aa64,
32'h20830094,
32'h80e70004,
32'h04110000,
32'h0093bfcd,
32'h83630000,
32'h90820000,
32'h10500073,
32'h0001a001,
32'hc0221161,
32'h2473c226,
32'h42633420,
32'h24730204,
32'h14833410,
32'h888d0004,
32'h10730409,
32'h440d3414,
32'h00941763,
32'h34102473,
32'h10730409,
32'h44023414,
32'h01214492,
32'h30200073,
32'h715d0000,
32'h04b7c2a6,
32'ha2238000,
32'h07b70004,
32'ha0238000,
32'h07b70007,
32'hc686ffff,
32'hc0cac4a2,
32'hdc52de4e,
32'hd85ada56,
32'hd462d65e,
32'hd06ad266,
32'h8793ce6e,
32'h90735987,
32'h00ef3057,
32'hc9011550,
32'h46814701,
32'h45814601,
32'h00ef4509,
32'h00ef14f0,
32'hcd110790,
32'h468d4581,
32'h45094601,
32'h075000ef,
32'h11f000ef,
32'h400005b7,
32'h00ef450d,
32'h00ef0c50,
32'hc5091a30,
32'h45814505,
32'h1c3000ef,
32'h46016595,
32'hb0058593,
32'hfa000513,
32'h778000ef,
32'h724000ef,
32'h2823c11d,
32'h2a23f800,
32'h2783f800,
32'h8389fe00,
32'hf8f02c23,
32'hf8002e23,
32'h08000793,
32'h30479073,
32'ha07347a1,
32'h15b73007,
32'h8593ffff,
32'h0513bd45,
32'h00effa00,
32'h25737c80,
32'h2e01f130,
32'hffff15b7,
32'hc0c58593,
32'hfa000513,
32'h7b2000ef,
32'h40485401,
32'h15b72ced,
32'h8593ffff,
32'h0513c145,
32'h00effa00,
32'h400879c0,
32'h15b724dd,
32'h8593ffff,
32'h0513c1c5,
32'h00effa00,
32'h25737880,
32'h2cc13010,
32'hffff15b7,
32'hc2458593,
32'hfa000513,
32'h772000ef,
32'hfc002573,
32'h15b72c6d,
32'h8593ffff,
32'h0513c2c5,
32'h00effa00,
32'h440875c0,
32'hffff1937,
32'h15b7244d,
32'h8593ffff,
32'h0513c345,
32'h00effa00,
32'h4c087440,
32'h05932479,
32'h0513c3c9,
32'h00effa00,
32'h48087340,
32'h15b72cbd,
32'h8593ffff,
32'h0513c485,
32'h00effa00,
32'h4c487200,
32'h059324ad,
32'h0513c3c9,
32'h00effa00,
32'h48487100,
32'hffff1937,
32'h05932c99,
32'h0513bd09,
32'h00effa00,
32'h00ef6fc0,
32'hc92161e0,
32'hffff15b7,
32'hc5058593,
32'hfa000513,
32'h6e6000ef,
32'h612000ef,
32'h040e4000,
32'h00a409b3,
32'h0089b433,
32'h0513942e,
32'h00effa00,
32'hc14161c0,
32'hfa000513,
32'h6b2000ef,
32'h0513c93d,
32'h00effa00,
32'h15b76b00,
32'h8593ffff,
32'h0513c7c5,
32'h00effa00,
32'h1a376a80,
32'h0593ffff,
32'h0513c88a,
32'h00effa00,
32'h0a936980,
32'h0b9306c0,
32'h0c130730,
32'h0c930650,
32'h17b70680,
32'h8593ffff,
32'h0513d087,
32'h00effa00,
32'h05136780,
32'h00effa00,
32'h85aa6500,
32'h0513842a,
32'h00effa00,
32'h05936300,
32'h0513bd09,
32'h00effa00,
32'h07936580,
32'h16630720,
32'h72c102f4,
32'h00ef8282,
32'heae35780,
32'h1463f685,
32'h66e300b4,
32'h4505f735,
32'h05932ec1,
32'h0513bd09,
32'h00effa00,
32'h450162c0,
32'h08632329,
32'he1631554,
32'h0663028a,
32'h05931584,
32'h0c63c88a,
32'h07930394,
32'h096303f0,
32'h15b714f4,
32'h8593ffff,
32'ha015dac5,
32'h07500793,
32'h02f40463,
32'h07800793,
32'h12f40a63,
32'hff7413e3,
32'h0044a403,
32'h15b7ec09,
32'h8593ffff,
32'h0513d105,
32'h00effa00,
32'hbf815d80,
32'h26ad4501,
32'h15b7b7a9,
32'h8593ffff,
32'h0513d2c5,
32'h00effa00,
32'h85225c00,
32'h15b72229,
32'h8593ffff,
32'h0513d345,
32'h00effa00,
32'h05375ac0,
32'h28d50040,
32'hffff15b7,
32'hd4c58593,
32'hfa000513,
32'h596000ef,
32'hfa000513,
32'h56e000ef,
32'h89aa85aa,
32'hfa000513,
32'h54e000ef,
32'h07900793,
32'heef99be3,
32'hc11924ed,
32'h2a11450d,
32'hffff15b7,
32'hd5858593,
32'hfa000513,
32'h562000ef,
32'h01045b13,
32'h004009b7,
32'h5d7d6dc1,
32'h45012c61,
32'h694000ef,
32'h0d800513,
32'h6b6000ef,
32'h2411854e,
32'h6a0000ef,
32'h89052c49,
32'h1b7dfd75,
32'h1fe399ee,
32'h2683fdab,
32'h09b7ff00,
32'h4d010040,
32'h87934d81,
32'h873300c9,
32'h430c01a6,
32'h00fd0533,
32'h9daec636,
32'h07b72645,
32'h0d110040,
32'h07b146b2,
32'hfe8d63e3,
32'h4788d5b7,
32'hafe58593,
32'h00400537,
32'h85a22651,
32'h00498513,
32'h05b32eb5,
32'h851341b0,
32'h2e8d0089,
32'hffff15b7,
32'hbb858593,
32'h4505bded,
32'ha783b709,
32'h92e30044,
32'h15b7ea07,
32'h8593ffff,
32'hb5d5d685,
32'hbd594505,
32'hffff15b7,
32'hd7858593,
32'h1101bdd9,
32'h0593c84a,
32'h892a0300,
32'hfa000513,
32'hcc22ce06,
32'hc64eca26,
32'h0593219d,
32'h05130780,
32'h14b7fa00,
32'h29a1ffff,
32'h84934471,
32'h59f1db84,
32'h008957b3,
32'h97a68bbd,
32'h0007c583,
32'hfa000513,
32'h29351471,
32'hff3416e3,
32'h446240f2,
32'h494244d2,
32'h610549b2,
32'h11418082,
32'hffff15b7,
32'h8593c422,
32'h842ab705,
32'hfa000513,
32'h21a1c606,
32'h04334795,
32'h15b702f4,
32'h8593ffff,
32'h0513dc85,
32'h95a2fa00,
32'h47a1290d,
32'h3007b073,
32'hc5012b45,
32'h45814505,
32'ha0012bc9,
32'hc686715d,
32'hc29ac496,
32'hde22c09e,
32'hda2adc26,
32'hd632d82e,
32'hd23ad436,
32'hce42d03e,
32'hca72cc46,
32'hc67ac876,
32'h24f3c47e,
32'h07b73420,
32'h079d8000,
32'h04f49663,
32'hc1192b85,
32'h2b954501,
32'hc9112621,
32'h27832639,
32'h8389fe00,
32'h37b3953e,
32'h95be00f5,
32'h54722639,
32'h42a640b6,
32'h43864316,
32'h555254e2,
32'h563255c2,
32'h571256a2,
32'h48725782,
32'h4e5248e2,
32'h4f324ec2,
32'h61614fa2,
32'h30200073,
32'h9963479d,
32'h07b700f4,
32'ha7838000,
32'hc3990007,
32'h3f154505,
32'h34102473,
32'hfa000513,
32'hc1212cd9,
32'hffff15b7,
32'hb7858593,
32'hfa000513,
32'h85262e9d,
32'h059335c9,
32'h05130200,
32'h2e15fa00,
32'h3d558522,
32'h02000593,
32'hfa000513,
32'h2573261d,
32'h35553430,
32'hffff15b7,
32'hbd058593,
32'hfa000513,
32'h04112699,
32'h34141073,
32'h1141bf8d,
32'h842ac422,
32'h75138141,
32'hc6060ff5,
32'h55132979,
32'h75130084,
32'h29510ff5,
32'h0ff47513,
32'h40b24422,
32'ha1610141,
32'hd2267179,
32'hce4ed04a,
32'hd606cc52,
32'h892ad422,
32'h448189ae,
32'h16634a11,
32'h05130209,
32'h2ce1fa00,
32'h007c842a,
32'h802397a6,
32'h04850087,
32'hff4495e3,
32'h542250b2,
32'h54924532,
32'h49f25902,
32'h61454a62,
32'h45018082,
32'h450d2921,
32'h00998433,
32'h8522292d,
32'h45013769,
32'h842a290d,
32'hb7e12105,
32'h45011141,
32'h2eedc606,
32'h21054519,
32'h014140b2,
32'h1101a131,
32'hce064501,
32'h451526e5,
32'h45012139,
32'hc62a2129,
32'h40f22ee5,
32'h61054532,
32'h11418082,
32'h37f9c606,
32'h77933ff9,
32'h557d0025,
32'h4501cb89,
32'h451126c1,
32'h2ed926dd,
32'h057a37e9,
32'h40b2857d,
32'h80820141,
32'hc85a7179,
32'h0b374785,
32'hd4228000,
32'hd226d606,
32'hce4ed04a,
32'hca56cc52,
32'hc462c65e,
32'h00fb2023,
32'he505842a,
32'hffff15b7,
32'hb8458593,
32'hfa000513,
32'h05b72c1d,
32'h85220040,
32'hd7b73f21,
32'h87934788,
32'h0063afe7,
32'h450104f5,
32'h15b7a80d,
32'h8593ffff,
32'h0513ba45,
32'h2c01fa00,
32'h00400537,
32'h15b73ba9,
32'h8593ffff,
32'h0513bb05,
32'h2af5fa00,
32'hfe802783,
32'h00080737,
32'he3998ff9,
32'h3b41450d,
32'hd9553fb9,
32'h09b7bfe5,
32'h85930040,
32'h85220049,
32'h8a2a35d1,
32'h00898593,
32'h3d6d8522,
32'hff002c03,
32'h7b938aaa,
32'h4901ffca,
32'h09b14481,
32'h013905b3,
32'h03791e63,
32'h450994d6,
32'h15b7f0f9,
32'h8593ffff,
32'h0513bb85,
32'h2255fa00,
32'h542250b2,
32'h800007b7,
32'h0147a223,
32'h000b2023,
32'h59025492,
32'h4a6249f2,
32'h4b424ad2,
32'h4c224bb2,
32'h80826145,
32'h359d8522,
32'h012c07b3,
32'hc38894aa,
32'hbf4d0911,
32'hd4227179,
32'hce4ed226,
32'hd04ad606,
32'h84aacc52,
32'h4401c62e,
32'h007c4991,
32'hca0397a2,
32'h3d590007,
32'h2c494501,
32'h2c654509,
32'h00848933,
32'h3511854a,
32'h24758552,
32'h3d412c71,
32'hfd758905,
32'h1ce30405,
32'h50b2fd34,
32'h54925422,
32'h49f25902,
32'h61454a62,
32'h11418082,
32'hc422c606,
32'hb07347a1,
32'h24033007,
32'hc119ff00,
32'h40400437,
32'hffff15b7,
32'hbbc58593,
32'hfa000513,
32'h852228ed,
32'h15b73199,
32'h8593ffff,
32'h0513bcc5,
32'h20e5fa00,
32'hfa000513,
32'hfd6d2875,
32'h000400e7,
32'hfe802503,
32'h89058145,
32'h07938082,
32'h43ccf900,
32'h43dc4388,
32'hfef59be3,
32'h07938082,
32'h577df900,
32'hc7ccc798,
32'h0001c788,
32'h07138082,
32'h87aafa00,
32'h00e51763,
32'hfe802503,
32'h89058149,
32'h07138082,
32'h4501fd00,
32'hfee79ce3,
32'hfe802503,
32'hb7f58169,
32'h00052023,
32'hfe002783,
32'h47010586,
32'h02b7d7b3,
32'h3fe00593,
32'h02f5e863,
32'h07c006b7,
32'h070e8e75,
32'h66c117fd,
32'h8b6116fd,
32'h8ff5079a,
32'h8f5d8f51,
32'hfa000693,
32'h00376793,
32'h00d50463,
32'h00176793,
32'h8082c11c,
32'hffe70693,
32'he6819af5,
32'h0705838d,
32'h8385b7d1,
32'h0737bfed,
32'h411c0020,
32'hfff58ff9,
32'h8082c14c,
32'h817d4108,
32'h67418082,
32'h8ff9411c,
32'h4148dff5,
32'h0ff57513,
32'h41088082,
32'h89058141,
32'h41488082,
32'h0ff57513,
32'h11018082,
32'hca26cc22,
32'hce06c64e,
32'h84aac84a,
32'h49a9842e,
32'h00044903,
32'h19630405,
32'h40f20009,
32'h44d24462,
32'h49b24942,
32'h80826105,
32'h01391563,
32'h852645b5,
32'h85ca3f69,
32'h3f518526,
32'h2503bfe1,
32'h8179fe80,
32'h80828905,
32'h87aa471d,
32'h04a76b63,
32'h00c5e733,
32'h557d4805,
32'h04e86663,
32'h078606b6,
32'h06168fd5,
32'hf4002023,
32'h05928fd1,
32'hf4002423,
32'h26238fcd,
32'he793f400,
32'h20232017,
32'h2423f4f0,
32'h2623f400,
32'h06b7f400,
32'h07934000,
32'h4398f400,
32'hff658f75,
32'h06b74398,
32'h45010200,
32'hc3988f55,
32'h557d8082,
32'h07138082,
32'h7613fff5,
32'h468d0ff7,
32'he06387aa,
32'h969304c6,
32'h557d0045,
32'h0513ee85,
32'h4114f400,
32'h06137679,
32'h8ef17ff6,
32'h8f55072e,
32'h77130795,
32'h079ac3f7,
32'h07378fd9,
32'h177dfe20,
32'h8ff981f1,
32'h8ddd05d6,
32'h4005e593,
32'h4501c10c,
32'h557d8082,
32'h07138082,
32'h431cf400,
32'h080006b7,
32'hc31c8fd5,
32'h25038082,
32'h814dfe80,
32'h80828905,
32'h007007b7,
32'h06068f7d,
32'h8a096791,
32'h879305aa,
32'h8e59c007,
32'h051e8dfd,
32'h75138e4d,
32'h068a3805,
32'h8a918e49,
32'hfa800813,
32'h20238e55,
32'h66130008,
32'h20230016,
32'h808200c8,
32'hfa800693,
32'h17934298,
32'hf7930035,
32'h77130387,
32'h8fd9f877,
32'h0407e793,
32'h8082c29c,
32'hfa800713,
32'hf793431c,
32'hc31cfbf7,
32'h26238082,
32'h0793faa0,
32'h4398fa80,
32'hfe074de3,
32'h751343c8,
32'h80820ff5,
32'hfe802503,
32'h89058141,
32'h47858082,
32'h97b3477d,
32'h069300a7,
32'h4663fc00,
32'h469800a7,
32'hc69c8fb9,
32'h46d88082,
32'hc6dc8fb9,
32'h07938082,
32'hc788fc00,
32'h8082c7cc,
32'h52450a07,
32'h00005f52,
32'h5252450a,
32'h4358455f,
32'h00000020,
32'h69617741,
32'h676e6974,
32'h6c656320,
32'h3376726c,
32'h78655f32,
32'h69622e65,
32'h2e2e2e6e,
32'h00000020,
32'h64616f4c,
32'h20676e69,
32'h00004028,
32'h2e2e2e29,
32'h0000000a,
32'h00004b4f,
32'h746f6f42,
32'h20676e69,
32'h6d6f7266,
32'h00000020,
32'h0a2e2e2e,
32'h0000000a,
32'h3c0a0a0a,
32'h4543203c,
32'h56524c4c,
32'h42203233,
32'h6c746f6f,
32'h6564616f,
32'h3e3e2072,
32'h4c420a0a,
32'h203a5644,
32'h20727041,
32'h32203831,
32'h0a343230,
32'h3a565748,
32'h00002020,
32'h4449430a,
32'h0020203a,
32'h4b4c430a,
32'h0020203a,
32'h53494d0a,
32'h00203a41,
32'h5349580a,
32'h00203a41,
32'h434f530a,
32'h0020203a,
32'h454d490a,
32'h00203a4d,
32'h74796220,
32'h40207365,
32'h00000000,
32'h454d440a,
32'h00203a4d,
32'h7475410a,
32'h6f6f626f,
32'h6e692074,
32'h2e733820,
32'h65725020,
32'h61207373,
32'h6b20796e,
32'h74207965,
32'h6261206f,
32'h2e74726f,
32'h0000000a,
32'h726f6241,
32'h2e646574,
32'h00000a0a,
32'h69617641,
32'h6c62616c,
32'h4d432065,
32'h0a3a7344,
32'h203a6820,
32'h706c6548,
32'h3a72200a,
32'h73655220,
32'h74726174,
32'h3a75200a,
32'h6c705520,
32'h0a64616f,
32'h203a7320,
32'h726f7453,
32'h6f742065,
32'h616c6620,
32'h200a6873,
32'h4c203a6c,
32'h2064616f,
32'h6d6f7266,
32'h616c6620,
32'h200a6873,
32'h42203a78,
32'h20746f6f,
32'h6d6f7266,
32'h616c6620,
32'h28206873,
32'h29504958,
32'h3a65200a,
32'h65784520,
32'h65747563,
32'h00000000,
32'h444d430a,
32'h00203e3a,
32'h65206f4e,
32'h75636578,
32'h6c626174,
32'h76612065,
32'h616c6961,
32'h2e656c62,
32'h00000000,
32'h74697257,
32'h00002065,
32'h74796220,
32'h74207365,
32'h5053206f,
32'h6c662049,
32'h20687361,
32'h00002040,
32'h7928203f,
32'h20296e2f,
32'h00000000,
32'h616c460a,
32'h6e696873,
32'h2e2e2e67,
32'h00000020,
32'h65206f4e,
32'h75636578,
32'h6c626174,
32'h00002e65,
32'h20296328,
32'h53207962,
32'h68706574,
32'h4e206e61,
32'h69746c6f,
32'h670a676e,
32'h75687469,
32'h6f632e62,
32'h74732f6d,
32'h746c6f6e,
32'h2f676e69,
32'h726f656e,
32'h00323376,
32'h61766e49,
32'h2064696c,
32'h00444d43,
32'h33323130,
32'h37363534,
32'h62613938,
32'h66656463,
32'h00455845,
32'h5a495300,
32'h48430045,
32'h4600534b,
32'h0048534c
};

// Memory with 32-bit entries, 32kb = 8192 cell, 1 cell = 4(B)
typedef logic [31:0] mem_t   [16*1024];
typedef logic [31:0] mem32_t [887];
// Function: Initialize mem32_t array from another mem32_t array -----------------------------
// -------------------------------------------------------------------------------------------
// impure function: returns NOT the same result every time it is evaluated with the same arguments since the source file might have changed
function mem_t mem32_init_f(input mem32_t init, input integer depth);
  mem_t mem_v;
  // make sure remaining memory entries are set to zero
  mem_v = '{default: '0};
  //
  if ($size(init) > depth) begin
     return mem_v;
  end
  // init only in range of source data array
  for (int idx_v = 0; idx_v < $size(init); ++idx_v) begin
    mem_v[idx_v] = init[idx_v];
  end
  return mem_v;
endfunction : mem32_init_f

endpackage : cellrv32_bootloader_image
