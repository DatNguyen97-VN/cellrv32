// The CELLRV32 RISC-V Processor: https://github.com/DatNguyen97-VN/cellrv32
// Auto-generated memory initialization file (for APPLICATION) from source file <hello_world/main.bin>
// Size: 5524 bytes (1 cell = 4 byte)
// MARCH: default
// Built: 30.04.2024 21:26:32

package cellrv32_application_image;

const logic [31:0] application_init_image [1381] = '{
32'h30005073,
32'h30401073,
32'h00000097,
32'h0ec08093,
32'h30509073,
32'h80002117,
32'hfe810113,
32'h80000197,
32'h7e418193,
32'h42814201,
32'h43814301,
32'h44814401,
32'h48814801,
32'h49814901,
32'h4a814a01,
32'h4b814b01,
32'h4c814c01,
32'h4d814d01,
32'h4e814e01,
32'h4f814f01,
32'h00001597,
32'h54458593,
32'h80000617,
32'hfa860613,
32'h80000697,
32'hfa068693,
32'h00c58963,
32'h00d65763,
32'hc2184198,
32'h06110591,
32'h0717bfd5,
32'h07138000,
32'h8793f867,
32'h56638741,
32'h202300f7,
32'h07110007,
32'h1417bfdd,
32'h04130000,
32'h1497bea4,
32'h84930000,
32'h5863be24,
32'h20830094,
32'h80e70004,
32'h04110000,
32'h4501bfcd,
32'h00ef4581,
32'h10730780,
32'h10733040,
32'h14173405,
32'h04130000,
32'h1497bba4,
32'h84930000,
32'h5863bb24,
32'h20830094,
32'h80e70004,
32'h04110000,
32'h0093bfcd,
32'h83630000,
32'h90820000,
32'h10500073,
32'h0001a001,
32'hc0221161,
32'h2473c226,
32'h42633420,
32'h24730204,
32'h14833410,
32'h888d0004,
32'h10730409,
32'h440d3414,
32'h00941763,
32'h34102473,
32'h10730409,
32'h44023414,
32'h01214492,
32'h30200073,
32'h11410000,
32'h00efc606,
32'h65957b20,
32'h85934601,
32'h0513b005,
32'h20e9fa00,
32'h00ef4501,
32'h00ef1450,
32'h00ef7d40,
32'h65850870,
32'hfa000513,
32'hc7c58593,
32'h40b22a11,
32'h01414501,
32'h11418082,
32'h85236805,
32'h47810005,
32'h08130054,
32'h4729cb08,
32'h02e57633,
32'h00f688b3,
32'h96420785,
32'h00064603,
32'h02e55533,
32'h00c88023,
32'hfee794e3,
32'h47258636,
32'h03000513,
32'h00964803,
32'h177d87ba,
32'h83410742,
32'h00a81763,
32'h000604a3,
32'hf76d167d,
32'h97b64781,
32'hc6034701,
32'hca090007,
32'h00170513,
32'h0023972e,
32'h171300c7,
32'h83410105,
32'hfff78613,
32'h00f69763,
32'h802395ba,
32'h01410005,
32'h87b28082,
32'h0713bfd9,
32'h87aafa00,
32'h00e51763,
32'hfe802503,
32'h89058149,
32'h07138082,
32'h4501fd00,
32'hfee79ce3,
32'hfe802503,
32'hb7f58169,
32'h00052023,
32'hfe002783,
32'h47010586,
32'h02b7d7b3,
32'h3fe00593,
32'h02f5e863,
32'h07c006b7,
32'h070e8e75,
32'h66c117fd,
32'h8b6116fd,
32'h8ff5079a,
32'h8f5d8f51,
32'hfa000693,
32'h00376793,
32'h00d50463,
32'h00176793,
32'h8082c11c,
32'hffe70693,
32'he6819af5,
32'h0705838d,
32'h8385b7d1,
32'h0737bfed,
32'h411c0020,
32'hfff58ff9,
32'h8082c14c,
32'hcc221101,
32'hc64eca26,
32'hc84ace06,
32'h842e84aa,
32'h490349a9,
32'h04050004,
32'h00091963,
32'h446240f2,
32'h494244d2,
32'h610549b2,
32'h15638082,
32'h45b50139,
32'h37c18526,
32'h852685ca,
32'hbfe13f6d,
32'hcabe711d,
32'hda2600bc,
32'hd64ed84a,
32'hd256d452,
32'hce5ed05a,
32'hca66cc62,
32'hde06c86a,
32'h84aadc22,
32'hc4b2892e,
32'hc8bac6b6,
32'hcec6ccc2,
32'h0993c03e,
32'h4ba90250,
32'h06900a13,
32'h07500a93,
32'h07800c13,
32'h07000c93,
32'h07300d13,
32'h06300b13,
32'h00094403,
32'h50f2ec19,
32'h54d25462,
32'h59b25942,
32'h5a925a22,
32'h4bf25b02,
32'h4cd24c62,
32'h61254d42,
32'h16638082,
32'h44031134,
32'h0a630019,
32'h6a630344,
32'h0e63048a,
32'h60630d64,
32'h0593028b,
32'h0e630250,
32'h07930d34,
32'h01630580,
32'h059306f4,
32'h85260250,
32'h85a23f29,
32'h0793a0d9,
32'h18e30640,
32'h4782fef4,
32'h87134380,
32'hc03a0047,
32'h00045863,
32'h02d00593,
32'h04338526,
32'h3dd54080,
32'h8522004c,
32'h004c3bcd,
32'h0f63a831,
32'hef630954,
32'h0f63008a,
32'h1ee30194,
32'h4782fba4,
32'h8713438c,
32'hc03a0047,
32'h3de98526,
32'hbfb90909,
32'hfb8413e3,
32'h00544782,
32'ha8036605,
32'h87130007,
32'hc03a0047,
32'h470185b6,
32'hc9c60613,
32'h02000513,
32'h00e857b3,
32'h97b28bbd,
32'h0007c783,
32'h16fd0711,
32'h00f68423,
32'hfea716e3,
32'h00010623,
32'h05800793,
32'hfaf41ce3,
32'h456587ae,
32'h00f10613,
32'h0007c703,
32'hf9f70693,
32'h0ff6f693,
32'h00d56563,
32'h80231701,
32'h078500e7,
32'hfec794e3,
32'h4782bf41,
32'h0007c583,
32'h00478713,
32'h8526c03a,
32'hb74935b9,
32'h004c4782,
32'h00478713,
32'hc03a4388,
32'h1563bf81,
32'h45b50174,
32'h3d158526,
32'h852685a2,
32'h35350905,
32'h0000b5c1,
32'hc686715d,
32'hc29ac496,
32'hde22c09e,
32'hda2edc2a,
32'hd636d832,
32'hd23ed43a,
32'hce46d042,
32'hca76cc72,
32'hc67ec87a,
32'h34202473,
32'he16347ad,
32'h67050287,
32'h00241793,
32'hcbc70713,
32'h439c97ba,
32'h67058782,
32'h0713078a,
32'h97bacec7,
32'h8782439c,
32'h800007b7,
32'hffd7c793,
32'h477197a2,
32'hfef773e3,
32'h58632afd,
32'ha07d0004,
32'h800007b7,
32'h0007a783,
32'h27739782,
32'h57833410,
32'h07c20007,
32'h061383c1,
32'h26f30047,
32'h8a913010,
32'h8b8dc699,
32'h8463468d,
32'h061300d7,
32'h10730027,
32'ha8ad3416,
32'h800007b7,
32'h00078793,
32'hb7e943dc,
32'h800007b7,
32'h00078793,
32'hbf7d479c,
32'h800007b7,
32'h00078793,
32'hbf4d47dc,
32'h800007b7,
32'h00078793,
32'hb75d4b9c,
32'h800007b7,
32'h00078793,
32'hbf694bdc,
32'h800007b7,
32'h00078793,
32'hb7794f9c,
32'h800007b7,
32'h00078793,
32'hb7494fdc,
32'h800007b7,
32'h00078793,
32'hbf9d539c,
32'h800007b7,
32'h00078793,
32'hb7ad53dc,
32'h800007b7,
32'h00078793,
32'h9782579c,
32'h40b65472,
32'h431642a6,
32'h55624386,
32'h564255d2,
32'h572256b2,
32'h58025792,
32'h4e6248f2,
32'h4f424ed2,
32'h61614fb2,
32'h30200073,
32'h800007b7,
32'h00078793,
32'hb7f157dc,
32'h800007b7,
32'h00078793,
32'hb7c15b9c,
32'h800007b7,
32'h00078793,
32'hbf555bdc,
32'h800007b7,
32'h00078793,
32'hb7655f9c,
32'h800007b7,
32'h00078793,
32'hbf715fdc,
32'h800007b7,
32'h00078793,
32'hbf4143bc,
32'h800007b7,
32'h00078793,
32'hb75143fc,
32'h800007b7,
32'h00078793,
32'hbfa547bc,
32'h800007b7,
32'h00078793,
32'hb7b547fc,
32'h800007b7,
32'h00078793,
32'hb7854bbc,
32'h800007b7,
32'h00078793,
32'hbf914bfc,
32'h800007b7,
32'h00078793,
32'hb7a14fbc,
32'h800007b7,
32'h00078793,
32'hbf354ffc,
32'h800007b7,
32'h00078793,
32'hbf0553bc,
32'h800007b7,
32'h00078793,
32'hb71553fc,
32'h800007b7,
32'h00078793,
32'hbf2157bc,
32'h800007b7,
32'h00078793,
32'hb73157fc,
32'h800007b7,
32'h00078793,
32'hb7015bbc,
32'h65851101,
32'hc84aca26,
32'hd6058593,
32'h6485892a,
32'hfa000513,
32'hc64ecc22,
32'h4471ce06,
32'h84933121,
32'h59f14844,
32'h008957b3,
32'h97a68bbd,
32'h0007c583,
32'hfa000513,
32'h36c51471,
32'hff3416e3,
32'h446240f2,
32'h494244d2,
32'h610549b2,
32'h11018082,
32'hfa000513,
32'hcc22ce06,
32'hc84aca26,
32'h3681c64e,
32'h20050763,
32'h85936585,
32'h0513d645,
32'h3e6dfa00,
32'h342024f3,
32'h640547ad,
32'h0097ea63,
32'h97936705,
32'h07130024,
32'h97baf1c7,
32'h8782439c,
32'h800007b7,
32'h00b78713,
32'h1ae48e63,
32'h02976e63,
32'h00378713,
32'h1ae48063,
32'h8163079d,
32'h65851af4,
32'hebc58593,
32'hfa000513,
32'h85263e95,
32'h059337b1,
32'h0513d8c4,
32'h369dfa00,
32'h34102473,
32'h3f2d8522,
32'h85634789,
32'ha8a90cf4,
32'hff07c793,
32'h473d97a6,
32'hfcf767e3,
32'h85936585,
32'h0513eb05,
32'h3e3dfa00,
32'h00f4f513,
32'h47853f11,
32'h009797b3,
32'hb0738bbd,
32'h05133447,
32'h0593fa00,
32'h360dd8c4,
32'h34102573,
32'ha0cd3de5,
32'h85936585,
32'h0513d6c5,
32'h3639fa00,
32'hd8c40593,
32'hfa000513,
32'h25733611,
32'h3de93410,
32'h0204de63,
32'h6585a0c1,
32'hd9458593,
32'hfa000513,
32'h278334f5,
32'hdf63f780,
32'h8b851007,
32'h10078863,
32'h85936585,
32'h0513ed45,
32'h3cc9fa00,
32'hd8c40593,
32'hfa000513,
32'h257334e1,
32'h3d793410,
32'h85936585,
32'h0513f085,
32'h3c5dfa00,
32'h34302573,
32'h6585bf51,
32'hdb058593,
32'hfa000513,
32'h05933455,
32'h0513d8c4,
32'h3c69fa00,
32'h34102473,
32'h35bd8522,
32'h85936585,
32'h0513f005,
32'h3459fa00,
32'h00045483,
32'h80c104c2,
32'h00240513,
32'h00055503,
32'h0542478d,
32'h0034f713,
32'h05638141,
32'h65850af7,
32'hd6058593,
32'hfa000513,
32'h3ca96905,
32'h09134431,
32'h59f14849,
32'h4084d7b3,
32'h97ca8bbd,
32'h0007c583,
32'hfa000513,
32'h3c051471,
32'hff3416e3,
32'h40f24462,
32'h494244d2,
32'h658549b2,
32'hf1058593,
32'hfa000513,
32'hb40d6105,
32'h85936585,
32'hb721dc45,
32'h85936585,
32'hb701dd05,
32'h85936585,
32'hbf29de85,
32'h85936585,
32'hbdc5dfc5,
32'h85936585,
32'hb729e185,
32'h85936585,
32'hb5c5e2c5,
32'h85936585,
32'hbde1e4c5,
32'h85936585,
32'hbdc1e6c5,
32'h85936585,
32'hb5e1e845,
32'h85936585,
32'hb5c1e985,
32'h85936585,
32'hbdd5ee45,
32'h85936585,
32'hb5f5ef45,
32'h8d450542,
32'h40f2b545,
32'h44d24462,
32'h49b24942,
32'h80826105,
32'hed6347f1,
32'h07b700a7,
32'h050a8000,
32'h00078793,
32'h071397aa,
32'hc3986960,
32'h80824501,
32'h80824505,
32'hc6061141,
32'hc226c422,
32'h43c00793,
32'h30579073,
32'h90734781,
32'h90733047,
32'h2c233447,
32'h4401f600,
32'h852244f5,
32'h74130405,
32'h3f5d0ff4,
32'hfe941be3,
32'h442240b2,
32'h01414492,
32'h71718082,
32'h06136585,
32'h859307e0,
32'h850a4945,
32'hd522d706,
32'hd14ad326,
32'hcd52cf4e,
32'hc95acb56,
32'h2a69c75e,
32'hfa000513,
32'h8a3ff0ef,
32'h840ac93d,
32'h07e10b13,
32'h4b8d6a85,
32'h2f8a8593,
32'hfa000513,
32'h915ff0ef,
32'h490189a2,
32'h0009d483,
32'h97934a41,
32'h87c10104,
32'h02300593,
32'h0007d463,
32'h02000593,
32'h05130486,
32'h04c2fa00,
32'hf0ef1a7d,
32'h80c18ddf,
32'hfc0a1fe3,
32'h09890905,
32'hfd7918e3,
32'h1de30419,
32'h542afb64,
32'h549a50ba,
32'h49fa590a,
32'h4b4a4a6a,
32'h85934bba,
32'h4ada2f8a,
32'hfa000513,
32'hf06f614d,
32'h50ba8b7f,
32'h549a542a,
32'h49fa590a,
32'h4ada4a6a,
32'h4bba4b4a,
32'h8082614d,
32'h65857171,
32'h07e00613,
32'h51458593,
32'hd706850a,
32'hd326d522,
32'hcf4ed14a,
32'hcb56cd52,
32'hc75ec95a,
32'h051320d5,
32'hf0effa00,
32'hc93dfecf,
32'h0b13840a,
32'h6a8507e1,
32'h85934b9d,
32'h05132f8a,
32'hf0effa00,
32'h89a285ff,
32'hd4834901,
32'h4a410009,
32'h01049793,
32'h059387c1,
32'hd4630200,
32'h05930007,
32'h04860230,
32'hfa000513,
32'h1a7d04c2,
32'h827ff0ef,
32'h1fe380c1,
32'h0905fc0a,
32'h18e30989,
32'h0439fd79,
32'hfb641de3,
32'h50ba542a,
32'h590a549a,
32'h4a6a49fa,
32'h4bba4b4a,
32'h2f8a8593,
32'h05134ada,
32'h614dfa00,
32'h801ff06f,
32'h542a50ba,
32'h590a549a,
32'h4a6a49fa,
32'h4b4a4ada,
32'h614d4bba,
32'h26f38082,
32'h16373010,
32'h06134000,
32'hf7b31046,
32'h8b6300c6,
32'he91d02c7,
32'h05131101,
32'hc636fa00,
32'hf0efce06,
32'h17b7f3cf,
32'h46b24000,
32'h10478613,
32'h6585c901,
32'h3fc58593,
32'hfa000513,
32'hfe8ff0ef,
32'h450540f2,
32'h80826105,
32'h80824501,
32'h80824505,
32'h00b547b3,
32'h0037f793,
32'h00c508b3,
32'h06079463,
32'h00300793,
32'h06c7f063,
32'h00357793,
32'h00050713,
32'h06079a63,
32'hffc8f613,
32'h40e606b3,
32'h02000793,
32'h08d7ce63,
32'h00058693,
32'h00070793,
32'h02c77863,
32'h0006a803,
32'h00478793,
32'h00468693,
32'hff07ae23,
32'hfec7e8e3,
32'hfff60793,
32'h40e787b3,
32'hffc7f793,
32'h00478793,
32'h00f70733,
32'h00f585b3,
32'h01176863,
32'h00008067,
32'h00050713,
32'h05157863,
32'h0005c783,
32'h00170713,
32'h00158593,
32'hfef70fa3,
32'hfee898e3,
32'h00008067,
32'h0005c683,
32'h00170713,
32'h00377793,
32'hfed70fa3,
32'h00158593,
32'hf6078ee3,
32'h0005c683,
32'h00170713,
32'h00377793,
32'hfed70fa3,
32'h00158593,
32'hfc079ae3,
32'hf61ff06f,
32'h00008067,
32'hff010113,
32'h00812623,
32'h02000413,
32'h0005a383,
32'h0045a283,
32'h0085af83,
32'h00c5af03,
32'h0105ae83,
32'h0145ae03,
32'h0185a303,
32'h01c5a803,
32'h0205a683,
32'h02470713,
32'h40e607b3,
32'hfc772e23,
32'hfe572023,
32'hfff72223,
32'hffe72423,
32'hffd72623,
32'hffc72823,
32'hfe672a23,
32'hff072c23,
32'hfed72e23,
32'h02458593,
32'hfaf446e3,
32'h00058693,
32'h00070793,
32'h02c77863,
32'h0006a803,
32'h00478793,
32'h00468693,
32'hff07ae23,
32'hfec7e8e3,
32'hfff60793,
32'h40e787b3,
32'hffc7f793,
32'h00478793,
32'h00f70733,
32'h00f585b3,
32'h01176863,
32'h00c12403,
32'h01010113,
32'h00008067,
32'h0005c783,
32'h00170713,
32'h00158593,
32'hfef70fa3,
32'hfee882e3,
32'h0005c783,
32'h00170713,
32'h00158593,
32'hfef70fa3,
32'hfce89ee3,
32'hfcdff06f,
32'h6c6c6548,
32'h6f77206f,
32'h21646c72,
32'h686a6820,
32'h20293a6a,
32'h75207962,
32'h31747261,
32'h0000000a,
32'h33323130,
32'h37363534,
32'h62613938,
32'h66656463,
32'h00000000,
32'h33323130,
32'h37363534,
32'h00003938,
32'h000004a0,
32'h000004d4,
32'h000004e0,
32'h000004ec,
32'h000004f8,
32'h00000504,
32'h00000510,
32'h0000051c,
32'h00000528,
32'h00000498,
32'h00000498,
32'h00000534,
32'h00000540,
32'h00000498,
32'h00000498,
32'h00000498,
32'h00000574,
32'h00000498,
32'h00000498,
32'h00000498,
32'h00000580,
32'h00000498,
32'h00000498,
32'h00000498,
32'h00000498,
32'h0000058c,
32'h00000598,
32'h000005a4,
32'h000005b0,
32'h000005bc,
32'h000005c8,
32'h000005d4,
32'h000005e0,
32'h000005ec,
32'h000005f8,
32'h00000604,
32'h00000610,
32'h0000061c,
32'h00000628,
32'h00000634,
32'h00000640,
32'h00007830,
32'h4554523c,
32'h0000203e,
32'h74736e49,
32'h74637572,
32'h206e6f69,
32'h72646461,
32'h20737365,
32'h6173696d,
32'h6e67696c,
32'h00006465,
32'h50204020,
32'h00003d43,
32'h74736e49,
32'h74637572,
32'h206e6f69,
32'h65636361,
32'h66207373,
32'h746c7561,
32'h00000000,
32'h656c6c49,
32'h206c6167,
32'h74736e69,
32'h74637572,
32'h006e6f69,
32'h61657242,
32'h696f706b,
32'h0000746e,
32'h64616f4c,
32'h64646120,
32'h73736572,
32'h73696d20,
32'h67696c61,
32'h0064656e,
32'h64616f4c,
32'h63636120,
32'h20737365,
32'h6c756166,
32'h00000074,
32'h726f7453,
32'h64612065,
32'h73657264,
32'h696d2073,
32'h696c6173,
32'h64656e67,
32'h00000000,
32'h726f7453,
32'h63612065,
32'h73736563,
32'h75616620,
32'h0000746c,
32'h69766e45,
32'h6d6e6f72,
32'h20746e65,
32'h6c6c6163,
32'h6f726620,
32'h2d55206d,
32'h65646f6d,
32'h00000000,
32'h69766e45,
32'h6d6e6f72,
32'h20746e65,
32'h6c6c6163,
32'h6f726620,
32'h2d4d206d,
32'h65646f6d,
32'h00000000,
32'h6863614d,
32'h20656e69,
32'h74666f73,
32'h65726177,
32'h51524920,
32'h00000000,
32'h6863614d,
32'h20656e69,
32'h656d6974,
32'h52492072,
32'h00000051,
32'h6863614d,
32'h20656e69,
32'h65747865,
32'h6c616e72,
32'h51524920,
32'h00000000,
32'h74736146,
32'h51524920,
32'h00000020,
32'h6e6b6e55,
32'h206e776f,
32'h70617274,
32'h75616320,
32'h203a6573,
32'h00000000,
32'h49545b20,
32'h554f454d,
32'h52455f54,
32'h00005d52,
32'h45445b20,
32'h45434956,
32'h5252455f,
32'h0000005d,
32'h4d505b20,
32'h52455f50,
32'h00005d52,
32'h4e49202c,
32'h003d5453,
32'h4441202c,
32'h003d5244,
32'h522f3c20,
32'h0a3e4554,
32'h00000000,
32'h00000758,
32'h0000077a,
32'h000007c2,
32'h00000850,
32'h00000858,
32'h00000860,
32'h00000868,
32'h00000870,
32'h00000878,
32'h000006f2,
32'h000006f2,
32'h00000880,
32'h3c3c0a0a,
32'h4c454320,
32'h3356524c,
32'h72502032,
32'h7365636f,
32'h20726f73,
32'h666e6f43,
32'h72756769,
32'h6f697461,
32'h3e3e206e,
32'h0000000a,
32'h3d3d3d0a,
32'h203d3d3d,
32'h65726f43,
32'h3d3d3d20,
32'h0a3d3d3d,
32'h00000000,
32'h73207349,
32'h6c756d69,
32'h6f697461,
32'h20203a6e,
32'h00202020,
32'h636f6c43,
32'h7073206b,
32'h3a646565,
32'h20202020,
32'h25202020,
32'h7a482075,
32'h0000000a,
32'h632d6e4f,
32'h20706968,
32'h75626564,
32'h72656767,
32'h0020203a,
32'h74737543,
32'h49206d6f,
32'h20203a44,
32'h20202020,
32'h30202020,
32'h0a782578,
32'h74726148,
32'h3a444920,
32'h20202020,
32'h20202020,
32'h30202020,
32'h0a782578,
32'h646e6556,
32'h4920726f,
32'h20203a44,
32'h20202020,
32'h30202020,
32'h0a782578,
32'h68637241,
32'h63657469,
32'h65727574,
32'h3a444920,
32'h30202020,
32'h0a782578,
32'h6c706d49,
32'h6e656d65,
32'h69746174,
32'h49206e6f,
32'h30203a44,
32'h00782578,
32'h00762820,
32'h68637241,
32'h63657469,
32'h65727574,
32'h2020203a,
32'h00202020,
32'h32337672,
32'h74696c2d,
32'h00656c74,
32'h6e6b6e75,
32'h006e776f,
32'h4153490a,
32'h74786520,
32'h69736e65,
32'h3a736e6f,
32'h20202020,
32'h00000000,
32'h7363695a,
32'h00002072,
32'h6e63695a,
32'h00207274,
32'h6f63695a,
32'h0020646e,
32'h6566695a,
32'h6965636e,
32'h00000020,
32'h6e69665a,
32'h00002078,
32'h7068695a,
32'h0000206d,
32'h756d6d5a,
32'h0000206c,
32'h6663785a,
32'h00002075,
32'h78656453,
32'h00002074,
32'h72746453,
32'h00206769,
32'h6e75540a,
32'h20676e69,
32'h6974706f,
32'h3a736e6f,
32'h20202020,
32'h00000000,
32'h54534146,
32'h4c554d5f,
32'h00000020,
32'h54534146,
32'h4948535f,
32'h00205446,
32'h7968500a,
32'h4d202e73,
32'h202e6d65,
32'h746f7250,
32'h20203a2e,
32'h00000000,
32'h72207525,
32'h6f696765,
32'h2973286e,
32'h7525202c,
32'h74796220,
32'h6d207365,
32'h6d696e69,
32'h67206c61,
32'h756e6172,
32'h6972616c,
32'h202c7974,
32'h2f46464f,
32'h20524f54,
32'h65646f6d,
32'h6c6e6f20,
32'h00000079,
32'h20746f6e,
32'h6c706d69,
32'h6e656d65,
32'h00646574,
32'h4d50480a,
32'h756f4320,
32'h7265746e,
32'h20203a73,
32'h20202020,
32'h00000000,
32'h63207525,
32'h746e756f,
32'h73287265,
32'h25202c29,
32'h69622075,
32'h29732874,
32'h64697720,
32'h00000065,
32'h3d3d0a0a,
32'h3d3d3d3d,
32'h6d654d20,
32'h2079726f,
32'h3d3d3d3d,
32'h000a3d3d,
32'h746f6f42,
32'h6e6f6320,
32'h75676966,
32'h69746172,
32'h203a6e6f,
32'h6f6f4220,
32'h00002074,
32'h20616976,
32'h746f6f42,
32'h64616f6c,
32'h000a7265,
32'h6d6f7266,
32'h6d656d20,
32'h2079726f,
32'h30204028,
32'h29782578,
32'h0000000a,
32'h74736e49,
32'h62202e72,
32'h20657361,
32'h72646461,
32'h3a737365,
32'h25783020,
32'h00000a78,
32'h65746e49,
32'h6c616e72,
32'h454d4920,
32'h20203a4d,
32'h20202020,
32'h00000020,
32'h2c736579,
32'h20752520,
32'h65747962,
32'h00000a73,
32'h61746144,
32'h73616220,
32'h64612065,
32'h73657264,
32'h20203a73,
32'h25783020,
32'h00000a78,
32'h65746e49,
32'h6c616e72,
32'h454d4420,
32'h20203a4d,
32'h20202020,
32'h00000020,
32'h65746e49,
32'h6c616e72,
32'h632d6920,
32'h65686361,
32'h2020203a,
32'h00000020,
32'h2c736579,
32'h00000020,
32'h62207525,
32'h73657479,
32'h7525202c,
32'h74657320,
32'h2c297328,
32'h20752520,
32'h636f6c62,
32'h2973286b,
32'h72657020,
32'h74657320,
32'h7525202c,
32'h74796220,
32'h70207365,
32'h62207265,
32'h6b636f6c,
32'h00000000,
32'h69642820,
32'h74636572,
32'h70616d2d,
32'h29646570,
32'h0000000a,
32'h524c2820,
32'h65722055,
32'h63616c70,
32'h6e656d65,
32'h6f702074,
32'h7963696c,
32'h00000a29,
32'h2e747845,
32'h73756220,
32'h746e6920,
32'h61667265,
32'h203a6563,
32'h00000020,
32'h2e747845,
32'h73756220,
32'h646e6520,
32'h6e6e6169,
32'h3a737365,
32'h00000020,
32'h0a676962,
32'h00000000,
32'h7474696c,
32'h000a656c,
32'h3d3d3d0a,
32'h203d3d3d,
32'h69726550,
32'h72656870,
32'h20736c61,
32'h3d3d3d3d,
32'h000a3d3d,
32'h49504720,
32'h00000a4f,
32'h49544d20,
32'h000a454d,
32'h52415520,
32'h000a3054,
32'h52415520,
32'h000a3154,
32'h49505320,
32'h0000000a,
32'h49445320,
32'h0000000a,
32'h49575420,
32'h0000000a,
32'h4d575020,
32'h0000000a,
32'h54445720,
32'h0000000a,
32'h4e525420,
32'h00000a47,
32'h53464320,
32'h0000000a,
32'h4f454e20,
32'h0a44454c,
32'h00000000,
32'h52495820,
32'h00000a51,
32'h54504720,
32'h000a524d,
32'h50495820,
32'h0000000a,
32'h454e4f20,
32'h45524957,
32'h0000000a,
32'h5241570a,
32'h474e494e,
32'h57532021,
32'h4153495f,
32'h65662820,
32'h72757461,
32'h72207365,
32'h69757165,
32'h29646572,
32'h20737620,
32'h495f5748,
32'h28204153,
32'h74616566,
32'h73657275,
32'h61766120,
32'h62616c69,
32'h2029656c,
32'h6d73696d,
32'h68637461,
32'h57530a21,
32'h4153495f,
32'h30203d20,
32'h20782578,
32'h6d6f6328,
32'h656c6970,
32'h6c662072,
32'h29736761,
32'h5f57480a,
32'h20415349,
32'h7830203d,
32'h28207825,
32'h6173696d,
32'h72736320,
32'h000a0a29,
32'h33323130,
32'h37363534,
32'h42413938,
32'h46454443,
32'h00000000,
32'h00000000,
32'hfffe1fff,
32'h07ff7ffc,
32'h7ffffffe,
32'hfffe81ff,
32'he1ff7fff,
32'h7ffffffe,
32'hfffee1ff,
32'he1ff7fff,
32'h7ffffffe,
32'hfff881ff,
32'h07ff7ffc,
32'h6000ffe0,
32'hff801fff,
32'hffff6001,
32'h781ffe06,
32'hf81effff,
32'hffff7e07,
32'h7f81e07e,
32'h81feffff,
32'h7ffe7fe0,
32'h7ff807fe,
32'h1ffe1ff8,
32'h07e07ffe,
32'h7fff7ffe,
32'hfffe8181,
32'he0077fff,
32'h7ffffffe,
32'hfffef81f,
32'h00000000,
32'h00000000,
32'h00000000,
32'h00000000,
32'h01800000,
32'h3fefc630,
32'h803ffb01,
32'hff1fcc0c,
32'hfffce183,
32'h03016018,
32'h6c0d8060,
32'h318f81b0,
32'h6018000f,
32'h80600301,
32'h01806c0c,
32'h1f8c6183,
32'hf301601f,
32'hcc0c807f,
32'h818f1f01,
32'h60181f8f,
32'h80610301,
32'h01868618,
32'h1f8c0183,
32'h03016018,
32'hc3318060,
32'h018f8198,
32'h3fef000f,
32'hff60f9fe,
32'hff3f60c0,
32'hfffcf183,
32'h00000000,
32'h00000000,
32'h01800000,
32'h0000c630
};

// Memory with 32-bit entries, 32kb = 8192 cell, 1 cell = 4(B)
typedef logic [31:0] mem_t   [32*1024];
typedef logic [31:0] mem32_t [1381];
// Function: Initialize mem32_t array from another mem32_t array -----------------------------
// -------------------------------------------------------------------------------------------
// impure function: returns NOT the same result every time it is evaluated with the same arguments since the source file might have changed
function mem_t mem32_init_app_f(input mem32_t init, input integer depth);
  mem_t mem_v;
  // make sure remaining memory entries are set to zero
  mem_v = '{default: '0};
  //
  if ($size(init) > depth) begin
     return mem_v;
  end
  // init only in range of source data array
  for (int idx_v = 0; idx_v < $size(init); ++idx_v) begin
    mem_v[idx_v] = init[idx_v];
  end
  return mem_v;
endfunction : mem32_init_app_f

endpackage : cellrv32_application_image
